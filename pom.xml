<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.operon</groupId>
    <artifactId>operon-core-parent</artifactId>
    <version>0.9.16-RELEASE</version>
  </parent>

  <groupId>io.operon</groupId>
  <artifactId>camel-operon</artifactId>
  <packaging>jar</packaging>
  <version>0.9.16-RELEASE</version>

  <name>Camel Operon Component</name>
  <url>https://operon.io</url>
  <description>Camel-operon is a camel-component for running Operon from Camel routes.
               It is also possible to call Camel routes from Operon.
               Operon is a programming language which can be easily embedded with JVM-based 
               languages (Java, Scala, Groovy, Kotlin, Clojure, etc.) or run standalone with the native-version. 
               Operon is especially great for transforming and handling JSON-data.
  </description>

  <scm>
    <connection>scm:git:https://github.com/operon-io/camel-operon.git</connection>
    <developerConnection>scm:git:https://github.com/operon-io/camel-operon.git</developerConnection>
    <url>https://github.com/operon-io/camel-operon</url>
  </scm>

  <developers>
    <developer>
      <id>tuomas</id>
      <name>Tuomas</name>
      <email>tuomas@operon.io</email>
      <url>https://operon.io</url>
      <organization>Operon.io</organization>
      <organizationUrl>https://operon.io</organizationUrl>
      <roles>
        <role>architect</role>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://www.apache.org/licenses/LICENSE-2.0</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    
    <maven.build-helper-plugin.version>3.3.0</maven.build-helper-plugin.version>
    <maven.resources-plugin.version>3.3.0</maven.resources-plugin.version>
    
    <camel.version>3.21.0</camel.version>
    <operon.version>0.9.16-RELEASE</operon.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.camel.archetypes</groupId>
      <artifactId>camel-archetype-component</artifactId>
      <version>${camel.version}</version>
    </dependency>
  
    <!-- Camel BOM -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-bom</artifactId>
      <version>${camel.version}</version>
      <scope>compile</scope>
      <type>pom</type>
    </dependency>

    <!-- camel -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-support</artifactId>
      <version>${camel.version}</version>
    </dependency>

    <!-- for custom camel-language -->
    <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-language</artifactId>
        <version>${camel.version}</version>
    </dependency>
    
    <!-- for custom camel-language -->
    <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-core-model</artifactId>
        <version>${camel.version}</version>
    </dependency>
  
    <!-- for serializing POJO to/from JSON -->
  	<dependency>
  		<groupId>com.google.code.gson</groupId>
  		<artifactId>gson</artifactId>
  		<version>${gson.version}</version>
  	</dependency>
    
    <!-- testing -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test</artifactId>
      <version>${camel.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-http</artifactId>
      <version>${camel.version}</version>
      <scope>test</scope>
    </dependency>
    
    <!-- the good stuff -->
    <dependency>
      <groupId>io.operon</groupId>
      <artifactId>operon-runner</artifactId>
      <version>${operon.version}</version>
    </dependency>
    
    <dependency>
      <groupId>io.operon</groupId>
      <artifactId>operon-parser</artifactId>
      <version>${project.parent.version}</version>
    </dependency>

    <dependency>
      <groupId>io.operon</groupId>
      <artifactId>operon-json-parser</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4-runtime</artifactId>
      <version>${antlr.version}</version>
    </dependency>
    
    <dependency>
        <groupId>redis.clients</groupId>
        <artifactId>jedis</artifactId>
        <version>${jedis.version}</version>
    </dependency>
    
    <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-exec</artifactId>
        <version>${commons-exec.version}</version>
    </dependency>
    
    <!-- logging -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${log4j.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>install</defaultGoal>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler-plugin.version}</version>
        <configuration>
          <source>11</source>
          <target>11</target>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven.resources-plugin.version}</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- generate camel meta-data -->
      <plugin>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-component-maven-plugin</artifactId>
        <version>${camel.version}</version>
        <executions>
          <execution>
            <id>generate</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <phase>process-classes</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${maven.build-helper-plugin.version}</version>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>add-source</goal>
              <goal>add-resource</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/generated/java</source>
              </sources>
              <resources>
                <resource>
                  <directory>src/generated/resources</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>${maven.gpg-plugin.version}</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
            <configuration>
              <keyname>${gpg.keyname}</keyname>
              <passphraseServerId>${gpg.keyname}</passphraseServerId>
            </configuration>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.sonatype.plugins</groupId>
        <artifactId>nexus-staging-maven-plugin</artifactId>
        <version>${maven.nexus-staging-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
           <serverId>ossrh</serverId>
           <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
           <autoReleaseAfterClose>true</autoReleaseAfterClose>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc-plugin.version}</version>
        <configuration>
          <destDir>LATEST</destDir>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven.source-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
         <groupId>org.apache.camel</groupId>
         <artifactId>camel-package-maven-plugin</artifactId>
         <version>${camel.version}</version>
         <executions>
             <execution>
                 <id>generate</id>
                 <phase>process-classes</phase>
                 <goals>
                     <goal>generate-languages-list</goal>
                 </goals>
             </execution>
         </executions>
         <configuration>
             <failFast>false</failFast>
         </configuration>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>oss.sonatype.org-snapshot</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

</project>
